{"version":3,"sources":["store/reducers/auth/types.js","store/reducers/auth/index.js","store/reducers/index.js","store/index.js","pages/Event.jsx","routes/index.js","pages/Login.jsx","components/AppRouter.jsx","store/reducers/auth/actionCreators.js","store/reducers/action-creators.js","hooks/useActions.js","components/Navbar.jsx","utils/rules.js","components/LoginForm.jsx","components/EventCalendar.jsx","App.jsx","index.js"],"names":["authActionList","initialState","isAuth","error","isLoading","user","auth","state","action","type","payload","rootReducer","combineReducers","reducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Event","props","useState","modalVisible","setModalVisible","events","justify","onClick","title","visible","onCancel","footer","routeNames","publicRoutes","path","component","className","align","LoginForm","exact","privateRoutes","AppRouter","useSelector","map","route","to","AuthActionCreators","setUser","setIsAuth","setError","setIsLoading","login","username","password","dispatch","a","setTimeout","axios","get","response","mockUser","data","find","localStorage","setItem","logout","removeItem","allActionCreators","useActions","useDispatch","bindActionCreators","Navbar","Header","Layout","router","useHistory","Fragment","span","theme","mode","selectable","Item","push","rules","message","required","LoginFrom","onFinish","values","autoComplete","label","name","wrapperCol","offset","htmlType","loading","EventCalendar","onPanelChange","value","console","log","format","App","useEffect","getItem","Content","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13c27cdb.chunk.js","sourcesContent":["export const authActionList = {\n  SET_AUTH: 'SET_AUTH',\n  SET_ERROR: 'SET_ERROR',\n  SET_USER: 'SET_USER',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n};\n","import {authActionList} from './types.js';\n\nconst initialState = {\n  isAuth: false,\n  error: '',\n  isLoading: false,\n  user: {},\n}\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case authActionList.SET_AUTH: {\n      return {...state, isAuth: action.payload, isLoading: false}\n    }\n    case authActionList.SET_ERROR: {\n      return {...state, error: action.payload, isLoading: false}\n    }\n    case authActionList.SET_USER: {\n      return {...state, user: action.payload}\n    }\n    case authActionList.SET_IS_LOADING: {\n      return {...state, isLoading: action.payload}\n    }\n    default: {\n      return state;\n    }\n  }\n\n};\n","import auth from './auth';\n\nexport default {\n  auth,\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport reducers from './reducers';\n\nconst rootReducer = combineReducers(reducers);\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n","import React, {useState} from 'react';\nimport { Layout, Row, Button, Modal } from 'antd';\n\nimport {EventCalendar} from '../components';\n\nconst Event = (props) => {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <Layout>\n      <EventCalendar\n        events={[]}\n      />\n\n      <Row justify=\"center\">\n        <Button\n          onClick={() => setModalVisible(true)}\n        >\n          Добавить событие\n        </Button>\n      </Row>\n\n      <Modal\n        title=\"Новое событие\"\n        visible={modalVisible}\n        onCancel={() => setModalVisible(false)}\n        footer={null}\n      >\n        EventForm\n      </Modal>\n    </Layout>\n  );\n};\n\nexport default Event;\n","import {Event, Login} from '../pages';\n\nexport const routeNames = {\n  LOGIN: '/login',\n  EVENT: '/',\n}\n\nexport const publicRoutes = [\n  {path: routeNames.LOGIN, component: Login, exact: true},\n];\n\nexport const privateRoutes = [\n  {path: routeNames.EVENT, component: Event, exact: true},\n];\n\n\n","import React from 'react';\nimport { Layout, Row, Col, Card } from 'antd';\n\nimport {LoginForm} from '../components';\n\nconst Login = (props) => {\n\n  return (\n    <div className=\"login\">\n      <Row justify=\"center\" align=\"middle\" className=\"h100\">\n        <Card>\n          <LoginForm />\n        </Card>\n      </Row>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\nimport {publicRoutes, privateRoutes, routeNames} from '../routes';\n\nconst AppRouter = (props) => {\n  const {isAuth} = useSelector(state => state.auth);\n\n  return (\n    isAuth\n      ?\n      <Switch>\n        {privateRoutes.map(route =>\n          <Route\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        )}\n        <Redirect to={routeNames.EVENT} />\n      </Switch>\n      :\n      <Switch>\n        {publicRoutes.map(route =>\n          <Route\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        )}\n        <Redirect to={routeNames.LOGIN} />\n      </Switch>\n  );\n};\n\nexport default AppRouter;\n","import {authActionList} from './types.js';\nimport axios from 'axios';\n\nexport const AuthActionCreators = {\n  setUser: (user) => ({\n    type: authActionList.SET_USER,\n    payload: user,\n  }),\n  setIsAuth: (auth) => ({\n    type: authActionList.SET_AUTH,\n    payload: auth,\n  }),\n  setError: (payload) => ({\n    type: authActionList.SET_ERROR,\n    payload,\n  }),\n  setIsLoading: (payload) => ({\n    type: authActionList.SET_IS_LOADING,\n    payload,\n  }),\n  login: (username, password) => async (dispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsLoading(true));\n\n      setTimeout(async () => {\n        const response = await axios.get('./users.json');\n        const mockUser = response.data.find(user => user.username === username && user.password === password);\n\n        if (mockUser) {\n          localStorage.setItem('auth', 'true');\n          localStorage.setItem('username', mockUser.username);\n          dispatch(AuthActionCreators.setIsAuth(true));\n          dispatch(AuthActionCreators.setUser(mockUser));\n        } else {\n          dispatch(AuthActionCreators.setError('Не корректный логин или пароль'))\n        }\n      }, 500);\n\n      // dispatch(AuthActionCreators.setIsLoading(false));\n    } catch (error) {\n      dispatch(AuthActionCreators.setError('Произошла ошибка при логине: ', error));\n    }\n  },\n  logout: () => async (dispatch) => {\n    localStorage.removeItem('auth');\n    localStorage.removeItem('username');\n    dispatch(AuthActionCreators.setUser({}));\n    dispatch(AuthActionCreators.setIsAuth(false));\n  },\n}\n","import {AuthActionCreators} from './auth/actionCreators.js';\n\nexport const allActionCreators = {\n  ...AuthActionCreators,\n}\n","import {useDispatch} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {allActionCreators} from '../store/reducers/action-creators.js';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return bindActionCreators(allActionCreators, dispatch);\n};\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { Layout, Menu, Row, Col } from 'antd';\n\nimport {routeNames} from '../routes';\nimport {useActions} from '../hooks/useActions.js';\n\nconst Navbar = (props) => {\n  const { Header } = Layout;\n  const router = useHistory();\n  const {isAuth, user} = useSelector(state => state.auth);\n  const {logout} = useActions();\n\n  return (\n    <Header>\n      <Row justify=\"end\">\n        {isAuth\n          ?\n          <React.Fragment>\n            <div className=\"navbar__user-name\">{user.username}</div>\n            <Col span={3}>\n              <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\n                <Menu.Item\n                  key={1}\n                  onClick={logout}\n                >\n                  Выйти\n                </Menu.Item>\n              </Menu>\n            </Col>\n          </React.Fragment>\n          :\n          <Col span={3}>\n            <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\n              <Menu.Item\n                key={1}\n                onClick={() => router.push(routeNames.LOGIN)}\n              >\n                Login\n              </Menu.Item>\n            </Menu>\n          </Col>\n        }\n\n      </Row>\n    </Header>\n  );\n};\n\nexport default Navbar;\n","export const rules = {\n  required: (message) => ({\n    required: true,\n    message,\n  }),\n};\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { Form, Input, Button } from 'antd';\n\nimport {rules} from '../utils/rules.js';\nimport {useActions} from '../hooks/useActions.js';\n\nconst LoginFrom = (props) => {\n  const {error, isLoading} = useSelector(state => state.auth);\n  const {login} = useActions();\n\n  const onFinish = (values) => {\n    login(values.username, values.password);\n  };\n\n  return (\n    <Form\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      {error &&\n        <div className=\"error-text\">{error}</div>\n      }\n      <Form.Item\n        label=\"Имя пользователя\"\n        name=\"username\"\n        rules={[rules.required('Введите ваше имя!')]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Пароль\"\n        name=\"password\"\n        rules={[rules.required('Введите пароль!')]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 18, span: 16 }}>\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          loading={isLoading}\n        >\n          Войти\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default LoginFrom;\n","import React from 'react';\nimport { Calendar } from 'antd';\n\nconst EventCalendar = (props) => {\n  function onPanelChange(value, mode) {\n    console.log(value.format('YYYY-MM-DD'), mode);\n  }\n\n  return (\n    <Calendar onPanelChange={onPanelChange} />\n  );\n};\n\nexport default EventCalendar;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { Layout } from 'antd';\n\nimport {AppRouter, Navbar} from './components';\nimport {useActions} from './hooks/useActions.js';\nimport './App.css';\n\nfunction App() {\n  const {setUser, setIsAuth} = useActions();\n\n  useEffect(() => {\n    if (localStorage.getItem('auth')) {\n      setUser( {username: localStorage.getItem('username' || '')} )\n      setIsAuth(true);\n    }\n  }, []);\n\n  return (\n    <Layout>\n      <Navbar />\n      <Layout.Content>\n        <AppRouter />\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport {store} from './store';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}