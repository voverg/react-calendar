{"version":3,"sources":["store/reducers/auth/index.js","store/reducers/event/index.js","store/reducers/index.js","store/index.js","data/users.js","api/UserService.js","store/reducers/auth/actionCreators.js","store/reducers/event/actionCreators.js","store/reducers/action-creators.js","hooks/useActions.js","utils/date.js","utils/rules.js","pages/Event.jsx","utils/event.js","routes/index.js","pages/Login.jsx","components/AppRouter.jsx","components/ui/BaseButton/BaseButton.jsx","components/Navbar.jsx","components/LoginForm.jsx","components/EventForm.jsx","components/EventCalendar.jsx","components/EventDetails.jsx","App.jsx","index.js"],"names":["authActionList","initialState","isAuth","error","isLoading","user","eventActionList","guests","events","auth","state","action","type","payload","event","rootReducer","combineReducers","reducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","users","username","password","name","UserService","url","find","AuthActionCreators","setUser","setIsAuth","setError","setIsLoading","login","dispatch","a","setTimeout","getUsers","mockUser","localStorage","setItem","logout","removeItem","EventActionCreators","setGuests","setEvents","fetchGuests","console","log","createEvent","getItem","json","JSON","parse","push","stringify","removeEvent","eventId","newEventList","filter","id","fetchEvents","userEvents","guest","author","allActionCreators","useActions","useDispatch","bindActionCreators","formatDate","date","year","getFullYear","month","getMonth","day","getDate","rules","message","required","Event","props","useState","modalVisible","setModalVisible","eventDetailsVisible","setEventDetailsVisible","currentEvents","setCurrentEvents","useSelector","useEffect","className","onClick","target","closest","currentEvent","Array","from","children","map","item","getCurrentEvents","title","visible","onCancel","footer","addEvent","deleteEvent","routeNames","publicRoutes","path","component","justify","align","LoginForm","exact","privateRoutes","AppRouter","route","to","BaseButton","Navbar","Layout","Header","router","useHistory","Fragment","LoginFrom","onFinish","values","autoComplete","Item","label","htmlType","loading","EventForm","description","setEvent","Option","Select","Date","now","toString","onChange","e","value","eventDate","toDate","style","width","EventCalendar","dateCellRender","dateFormatted","status","text","EventDetails","handleDeleteEvent","getUser","App","Content","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00edecb5.chunk.js","sourcesContent":["export const authActionList = {\n  SET_AUTH: 'SET_AUTH',\n  SET_ERROR: 'SET_ERROR',\n  SET_USER: 'SET_USER',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n};\n\nconst initialState = {\n  isAuth: false,\n  error: '',\n  isLoading: false,\n  user: {},\n}\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case authActionList.SET_AUTH: {\n      return {...state, isAuth: action.payload, isLoading: false}\n    }\n    case authActionList.SET_ERROR: {\n      return {...state, error: action.payload, isLoading: false}\n    }\n    case authActionList.SET_USER: {\n      return {...state, user: action.payload}\n    }\n    case authActionList.SET_IS_LOADING: {\n      return {...state, isLoading: action.payload}\n    }\n    default: {\n      return state;\n    }\n  }\n\n};\n","export const eventActionList = {\n  SET_GUESTS: 'SET_GUESTS',\n  SET_EVENTS: 'SET_EVENTS',\n};\n\nconst initialState = {\n  guests: [],\n  events: [],\n};\n\nexport default function eventReduser(state = initialState, action) {\n  switch (action.type) {\n    case eventActionList.SET_GUESTS:\n      return {...state, guests: action.payload}\n    case eventActionList.SET_EVENTS:\n      return {...state, events: action.payload}\n    default:\n      return state;\n  }\n}\n","import auth from './auth';\nimport event from './event';\n\nexport default {\n  auth,\n  event,\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport reducers from './reducers';\n\nconst rootReducer = combineReducers(reducers);\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n","export const users = [\n  {\n    username: 'user',\n    password: '123',\n    name: 'User',\n  },\n  {\n    username: 'admin',\n    password: 'admin777',\n    name: 'Admin',\n  },\n  {\n    username: 'voverg',\n    password: 'cat2dog',\n    name: 'Владимир Петров',\n  },\n  {\n    username: 'tancha',\n    password: 'novchik',\n    name: 'Татьяна Петрова',\n  },\n  {\n    username: 'andr',\n    password: 'fat37',\n    name: 'Андрей Аксёнов',\n  },\n  {\n    username: 'bender',\n    password: 'futurama',\n    name: 'Робот Бендер',\n  },\n];\n","import {users} from 'data/users.js';\n\n// export const getUser = (username) => {\n//     const users = UserService.getUsers();\n//     const user = users.find(user => user.username === username);\n\n//     return user;\n//   },\n\nexport default class UserService {\n  static getUsers(url) {\n    const data = users;\n    return data;\n  }\n\n  static getUser(username) {\n    const user = users.find(user => user.username === username);\n    return user;\n  }\n}\n","import {authActionList} from './';\nimport UserService from 'api/UserService.js';\n\nexport const AuthActionCreators = {\n  setUser: (user) => ({\n    type: authActionList.SET_USER,\n    payload: user,\n  }),\n  setIsAuth: (auth) => ({\n    type: authActionList.SET_AUTH,\n    payload: auth,\n  }),\n  setError: (payload) => ({\n    type: authActionList.SET_ERROR,\n    payload,\n  }),\n  setIsLoading: (payload) => ({\n    type: authActionList.SET_IS_LOADING,\n    payload,\n  }),\n  login: (username, password) => async (dispatch) => {\n    try {\n      dispatch(AuthActionCreators.setIsLoading(true));\n\n      setTimeout(async () => {\n        const users = UserService.getUsers();\n        const mockUser = users.find(user => user.username === username && user.password === password);\n\n        if (mockUser) {\n          localStorage.setItem('calendarAuth', 'true');\n          localStorage.setItem('username', mockUser.username);\n          // localStorage.setItem('name', mockUser.name);\n          dispatch(AuthActionCreators.setUser(mockUser));\n          dispatch(AuthActionCreators.setIsAuth(true));\n        } else {\n          dispatch(AuthActionCreators.setError('Не корректный логин или пароль'))\n        }\n      }, 500);\n\n      // dispatch(AuthActionCreators.setIsLoading(false));\n    } catch (error) {\n      dispatch(AuthActionCreators.setError('Произошла ошибка при логине: ', error));\n    }\n  },\n  logout: () => async (dispatch) => {\n    localStorage.removeItem('calendarAuth');\n    localStorage.removeItem('username');\n    // localStorage.removeItem('name');\n    dispatch(AuthActionCreators.setUser({}));\n    dispatch(AuthActionCreators.setIsAuth(false));\n  },\n}\n","import {eventActionList} from './';\nimport UserService from 'api/UserService.js';\n\nexport const EventActionCreators = {\n  setGuests: (guests) => ({\n    type: eventActionList.SET_GUESTS,\n    payload: guests,\n  }),\n  setEvents: (events) => ({\n    type: eventActionList.SET_EVENTS,\n    payload: events,\n  }),\n  fetchGuests: () => (dispatch) => {\n    try {\n      const users = UserService.getUsers();\n      dispatch(EventActionCreators.setGuests(users));\n    } catch (error) {\n      console.log('Ошибка при получении списка пользователей: ', error);\n    }\n  },\n  createEvent: (event) => (dispatch) => {\n    try {\n      const events = localStorage.getItem('events') || '[]';\n      const json = JSON.parse(events);\n      json.push(event);\n      dispatch(EventActionCreators.setEvents(json));\n      localStorage.setItem('events', JSON.stringify(json));\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  removeEvent: (eventId) => (dispatch) => {\n    try {\n      const events = localStorage.getItem('events') || '[]';\n      const json = JSON.parse(events);\n      const newEventList = json.filter(event => event.id !== eventId);\n      dispatch(EventActionCreators.setEvents(newEventList));\n      localStorage.setItem('events', JSON.stringify(newEventList));\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  fetchEvents: (username) => (dispatch) => {\n    try {\n      const events = localStorage.getItem('events') || '[]';\n      const json = JSON.parse(events);\n      const userEvents = json.filter(event => event.guest === username || event.author === username);\n      dispatch(EventActionCreators.setEvents(userEvents));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n};\n","import {AuthActionCreators} from './auth/actionCreators.js';\nimport {EventActionCreators} from './event/actionCreators.js';\n\nexport const allActionCreators = {\n  ...AuthActionCreators,\n  ...EventActionCreators,\n}\n","import {useDispatch} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {allActionCreators} from '../store/reducers/action-creators.js';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return bindActionCreators(allActionCreators, dispatch);\n};\n","export const formatDate = (date) => {\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1) < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n  const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n\n  const dateFormatted = `${year}.${month}.${day}`;\n\n  return dateFormatted;\n}\n","export const rules = {\n  required: (message = 'Обязательное поле') => ({\n    required: true,\n    message,\n  }),\n};\n","import React, {useState, useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport { Layout, Row, Button, Modal } from 'antd';\n\nimport {Navbar, EventCalendar, EventForm, EventDetails} from 'components';\nimport {useActions} from 'hooks/useActions.js';\nimport {getCurrentEvents} from 'utils';\n\nconst Event = (props) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [eventDetailsVisible, setEventDetailsVisible] = useState(false);\n  const [currentEvents, setCurrentEvents] = useState([]);\n\n  const {guests, events} = useSelector(state => state.event);\n  const {fetchGuests, fetchEvents, createEvent, removeEvent} = useActions();\n  const {user} = useSelector(state => state.auth);\n\n  useEffect(() => {\n    fetchGuests();\n    fetchEvents(user.username);\n  }, []);\n\n  const addEvent = (event) => {\n    setModalVisible(false);\n    createEvent(event);\n    fetchEvents(user.username);\n  };\n\n  const deleteEvent = (eventId) => {\n    removeEvent(eventId);\n    setCurrentEvents(currentEvents.filter(event => event.id !== eventId));\n  }\n\n  const handleCalendar = (event) => {\n    let target = event.target;\n\n    if (target.closest('.events')) {\n      target = target.closest('.events');\n    }\n\n    if (target.className === 'events') {\n      setCurrentEvents(getCurrentEvents(target, events));\n      setEventDetailsVisible(true);\n    }\n  }\n\n  return (\n    <Layout>\n      <Navbar setModalVisible={setModalVisible} />\n\n      <div className=\"calendar-wrap\" onClick={handleCalendar}>\n        <EventCalendar\n          events={events}\n        />\n      </div>\n\n      <Modal\n        title=\"Новое событие\"\n        visible={modalVisible}\n        onCancel={() => setModalVisible(false)}\n        footer={null}\n      >\n        <EventForm\n          addEvent={addEvent}\n          guests={guests}\n        />\n      </Modal>\n\n      <Modal\n        title=\"Детали событий\"\n        visible={eventDetailsVisible}\n        onCancel={() => setEventDetailsVisible(false)}\n        footer={null}\n      >\n        <EventDetails\n          currentEvents={currentEvents}\n          deleteEvent={deleteEvent}\n        />\n      </Modal>\n    </Layout>\n  );\n};\n\nexport default Event;\n","export const getCurrentEvents = (currentEvent, events) => {\n  const currentEventIds = Array.from(currentEvent.children).map(item => item.id);\n  const currentEvents = currentEventIds.map(eventId => {\n    return events.find(event => event.id === eventId);\n  });\n\n  return currentEvents;\n}\n","import {Event, Login} from '../pages';\n\nexport const routeNames = {\n  LOGIN: '/react-calendar/login',\n  EVENT: '/react-calendar',\n}\n\nexport const publicRoutes = [\n  {path: routeNames.LOGIN, component: Login, exact: true},\n];\n\nexport const privateRoutes = [\n  {path: routeNames.EVENT, component: Event, exact: true},\n];\n\n\n","import React from 'react';\nimport { Layout, Row, Col, Card } from 'antd';\n\nimport {Navbar, LoginForm} from 'components';\n\nconst Login = (props) => {\n\n  return (\n    <div className=\"login\">\n      <Navbar />\n      <Row justify=\"center\" align=\"middle\" className=\"h100\">\n        <Card>\n          <div className=\"card__header\">\n            <p>\n              Авторизуйтесь, чтобы войти.<br />\n              Демо-вход: логин - <b>user</b>, пароль - <b>123</b>\n            </p>\n          </div>\n          <LoginForm />\n        </Card>\n      </Row>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\nimport {publicRoutes, privateRoutes, routeNames} from '../routes';\n\nconst AppRouter = (props) => {\n  const {isAuth} = useSelector(state => state.auth);\n\n  return (\n    isAuth\n      ?\n      <Switch>\n        {privateRoutes.map(route =>\n          <Route\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        )}\n        <Redirect to={routeNames.EVENT} />\n      </Switch>\n      :\n      <Switch>\n        {publicRoutes.map(route =>\n          <Route\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            exact={route.exact}\n          />\n        )}\n        <Redirect to={routeNames.LOGIN} />\n      </Switch>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\n\nimport './base-button.css';\n\nconst BaseButton = ({children, ...props}) => {\n  const className = props.className ? props.className : '';\n\n  return (\n    <button {...props} className={`base-button ${className}`}>\n      {children}\n    </button>\n  );\n};\n\nexport default BaseButton;\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { Layout, Menu, Row, Col } from 'antd';\n\nimport {routeNames} from 'routes';\nimport {useActions} from 'hooks/useActions.js';\nimport {BaseButton} from 'components/ui';\n\nconst Navbar = (props) => {\n  const { Header } = Layout;\n  const router = useHistory();\n  const {isAuth, user} = useSelector(state => state.auth);\n  const {logout} = useActions();\n\n  return (\n    <header className=\"navbar\">\n        {isAuth\n          ?\n          <React.Fragment>\n            <BaseButton\n              className=\"navbar__add-btn\"\n              onClick={() => props.setModalVisible(true)}\n            >\n              Добавить событие\n            </BaseButton>\n\n            <div className=\"navbar__user-name\">{user.name}</div>\n\n            <nav className=\"havbar__nav\">\n              <div\n                className=\"navbar__item\"\n                key={1}\n                onClick={logout}\n              >\n                Выйти\n              </div>\n            </nav>\n          </React.Fragment>\n          :\n          <React.Fragment>\n            <div className=\"logo\"></div>\n            <nav className=\"havbar__nav\">\n              <div\n                className=\"navbar__item\"\n                key={1}\n                onClick={() => router.push(routeNames.LOGIN)}\n              >\n                Login\n              </div>\n            </nav>\n          </React.Fragment>\n        }\n\n    </header>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport { Form, Input, Button } from 'antd';\n\nimport {rules} from '../utils/rules.js';\nimport {useActions} from '../hooks/useActions.js';\n\nconst LoginFrom = (props) => {\n  const {error, isLoading} = useSelector(state => state.auth);\n  const {login} = useActions();\n\n  const onFinish = (values) => {\n    login(values.username, values.password);\n  };\n\n  return (\n    <Form\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      {error &&\n        <div className=\"error-text\">{error}</div>\n      }\n\n      <Form.Item\n        label=\"Имя пользователя\"\n        name=\"username\"\n        rules={[rules.required('Введите ваше имя!')]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Пароль\"\n        name=\"password\"\n        rules={[rules.required('Введите пароль!')]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          loading={isLoading}\n        >\n          Войти\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default LoginFrom;\n","import React, {useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport { Form, Input, DatePicker, Select, Button } from 'antd';\n\nimport {formatDate, rules} from 'utils';\n\nconst EventForm = ({addEvent, guests}) => {\n  const [event, setEvent] = useState({\n    author: '',\n    date: '',\n    description: '',\n    guest: '',\n    id: '',\n  });\n  const { Option } = Select;\n  const {user} = useSelector(state => state.auth);\n\n  const onFinish = () => {\n    const id = Date.now().toString();\n    addEvent({...event, author: user.username, id: id});\n  };\n\n  const changeDesription = (e) => {\n    const value = e.target.value;\n    setEvent({...event, description: value});\n  }\n\n  const changeDate = (date) => {\n    if (date) {\n      const eventDate = formatDate(date.toDate());\n      setEvent({...event, date: eventDate});\n    }\n  };\n\n  const changeGuest = (guest) => {\n    setEvent({...event, guest: guest});\n  };\n\n  return (\n    <Form\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"Событие\"\n        name=\"description\"\n        rules={[rules.required()]}\n      >\n        <Input onChange={changeDesription} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Дата\"\n        name=\"date\"\n        rules={[rules.required()]}\n      >\n        <DatePicker\n          onChange={changeDate}\n          />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Участник\"\n        name=\"guest\"\n        rules={[rules.required()]}\n      >\n        <Select style={{ width: 220 }} onChange={changeGuest}>\n          {guests.map(guest =>\n            <Option key={guest.username} value={guest.username}>\n              {guest.name}\n            </Option>\n          )}\n\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n        >\n          Добавить событие\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default EventForm;\n","import React from 'react';\nimport { Calendar, Badge } from 'antd';\n\nimport {formatDate} from 'utils';\n\nconst EventCalendar = ({events}) => {\n  function dateCellRender(value) {\n    const dateFormatted = formatDate(value.toDate());\n    const currentEvents = events.filter(event => event.date === dateFormatted);\n\n    return (\n      <div className=\"events\">\n        {currentEvents.map( (event) => (\n          <div key={event.id} id={event.id} className=\"events-item\" >\n            <Badge\n              status=\"success\"\n              text={event.description}\n            />\n          </div>\n        ))}\n      </div>\n    );\n\n  }\n\n  return (\n    <Calendar dateCellRender={dateCellRender} />\n  );\n};\n\nexport default EventCalendar;\n","import React, {useState, useEffect} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport UserService from 'api/UserService.js';\nimport {BaseButton} from 'components/ui';\n\nconst EventDetails = ({currentEvents, deleteEvent}) => {\n  const handleDeleteEvent = (event) => {\n    const eventId = event.target.closest('.current-event').id;\n    deleteEvent(eventId);\n  }\n\n  return (\n    <div className=\"event-details\">\n      {currentEvents.map(event =>\n        <div key={event.id} id={event.id} className=\"current-event\">\n          <div className=\"current-event__header\">\n            {event.description}\n          </div>\n\n          <div className=\"current-event__body\">\n            <div className=\"current-event__author\">\n              Событие создал: <b>{UserService.getUser(event.author).name}</b>\n            </div>\n            <div className=\"current-event__date\">\n              Дата события: <b>{event.date}</b>\n            </div>\n            <div className=\"current-event__guest\">\n              Событие назначено: <b>{UserService.getUser(event.guest).name}</b>\n            </div>\n            <BaseButton\n              className=\"current-event__delete\"\n              onClick={handleDeleteEvent}\n            >\n              Удалить событие\n            </BaseButton>\n          </div>\n\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EventDetails;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { Layout } from 'antd';\n\nimport {AppRouter, Navbar} from 'components';\nimport UserService from 'api/UserService.js';\nimport {useActions} from 'hooks/useActions.js';\nimport './App.css';\n\nfunction App() {\n  const {setUser, setIsAuth} = useActions();\n\n  useEffect(() => {\n    if (localStorage.getItem('calendarAuth')) {\n      const user = UserService.getUser(localStorage.getItem('username' || ''));\n      setUser( {...user} )\n      setIsAuth(true);\n    }\n  }, []);\n\n  return (\n    <Layout>\n      <Layout.Content>\n        <AppRouter />\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport {store} from './store';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}